{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#pileupy","title":"PileuPy","text":"<p>A python package for visualizing genome browser tracks easily. Built on top of Bokeh to deliver high-performance, customizable visualizations for genomic data.</p>"},{"location":"#quick-start","title":"Quick start","text":"<p>Generate standalone HTML report</p> <pre><code>from pileupy.main import Pileupy\n\nbrowser = Pileupy('chr22:24376166-24376456', genome='hg19')\nbrowser.add_track_alignment('gstt1_sample.bam')\nbrowser.show()\n</code></pre> <p>Start interactive browser</p> <pre><code>from pileupy.main import Pileupy\n\nbrowser.add_track_alignment('gstt1_sample.bam')\nbrowser.add_track_annotation('mod.bed')\nbrowser.serve()\n</code></pre> <p>Open the app http://localhost:5006/</p> <p></p>"},{"location":"#installation","title":"Installation","text":"<pre><code>git clone https://github.com/satriobio/pileupy.git \ncd pileupy\npip -e .\n</code></pre>"},{"location":"#license","title":"License","text":"<p>GNU General Public License v3.0</p>"},{"location":"advance/","title":"Advanced Usage","text":""},{"location":"advance/#run-using-jupyter-notebook","title":"Run using Jupyter Notebook","text":""},{"location":"advance/#run-in-panel","title":"Run in Panel","text":""},{"location":"advance/#run-in-nice-gui","title":"Run in Nice GUI","text":""},{"location":"advance/#custom-bokeh-figure","title":"Custom Bokeh figure","text":""},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#source","title":"Source","text":"<pre><code>git clone https://github.com/satriobio/pileupy.git \ncd pileupy\npip -e .\n</code></pre>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#basic-setup","title":"Basic setup","text":"<p>This setup will generate standalone HTML report and open new tab in browser.</p> <pre><code>from pileupy.main import Pileupy\n\nbrowser = Pileupy('chr22:24376166-24376456', genome='hg19')\nbrowser.add_track_alignment('data/demo.bam')\nbrowser.show()\n</code></pre> <p></p> <p>This setup will start interactive genome browser.</p> <pre><code>from pileupy.main import Pileupy\n\nbrowser = Pileupy('chr22:24376166-24376456', genome='hg19', control=True)\nbrowser.add_track_alignment('data/demo.bam')\nbrowser.serve()\n</code></pre> <p></p>"},{"location":"usage/#tracks","title":"Tracks","text":""},{"location":"usage/#reference","title":"Reference","text":"<p>Choose available genome reference detailed bellow using <code>genome</code> or specify reference path using <code>reference</code>. Choosing reference from available genome will also load Idiogram and RefSeq track. </p> <ul> <li>Human hg19 <code>hg19</code></li> <li>Human hg38 <code>hg38</code></li> </ul> <pre><code>from pileupy.main import Pileupy\n\nbrowser = Pileupy('chr22:24376166-24376456', genome='hg19')\n# browser = Pileupy('chr22:24376166-24376456', reference='/foo/bar/hg19.fa')\n</code></pre>"},{"location":"usage/#alignment","title":"Alignment","text":"<p>Add aligment track using <code>add_track_alignment</code>. Format supported is <code>SAM</code>, <code>BAM</code>, and <code>CRAM</code>.</p> <pre><code>from pileupy.main import Pileupy\n\nbrowser = Pileupy('chr22:24376166-24376456', genome='hg19')\nbrowser.add_track_alignment('data/demo.bam')\n</code></pre> <p>Disable SNP highlight</p> <pre><code>browser.add_track_alignment('data/demo.bam', snp=False)\n</code></pre> <p>Group reads by phasing</p> <pre><code>browser.add_track_alignment('data/demo.bam', phasing=True)\n</code></pre>"},{"location":"usage/#annotations","title":"Annotations","text":"<p>Add annotation track using <code>add_track_annotation</code>. Format supported is <code>BED</code>.</p> <pre><code>browser.add_track_annotation('data/mod.bed')\n</code></pre> <p></p>"},{"location":"usage/#data-frame","title":"Data Frame","text":"<p>Add data frame track using <code>add_track_annotation</code>. Input used is pandas data frame with at least following columns <code>chrom</code>, <code>start</code>, <code>value</code></p> <pre><code>import pandas as pd\nimport numpy as np\n\ncontig = \"chr22\"\nstart = 24376166\nend = 24376456\npositions = np.arange(start, end + 1)\nnum_reads = 5  # You can change this number based on the number of reads you want\ndata = []\nfor read_id in range(num_reads):\n    values = np.random.normal(loc=0, scale=1, size=len(positions))  # Gaussian noise for each read\n    read_data = {\n        'chrom': [contig] * len(positions),\n        'start': positions,\n        'end': positions + 1,\n        'value': values,\n        'read_names': [read_id] * len(positions)\n    }\n    df_read = pd.DataFrame(read_data)\n    data.append(df_read)\nfinal_df = pd.concat(data, ignore_index=True)\n\nbrowser.add_track_df(final_df)\n</code></pre> <p></p>"}]}